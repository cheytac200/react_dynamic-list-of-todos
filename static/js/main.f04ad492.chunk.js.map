{"version":3,"sources":["components/TodoList/TodoList.jsx","helper.js","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","onUserSelect","selectedUser","handleChangeTitle","titleSearch","setStatus","className","type","id","name","value","onChange","target","event","map","todo","key","completed","readOnly","title","userId","onClick","request","url","options","fetch","then","res","ok","Error","status","statusText","json","getUser","CurrentUser","state","user","a","this","props","setState","data","prevProps","email","phone","onClearUser","React","Component","App","selectedUserId","selectStatus","setCurrentUser","setTodosStatus","clearUser","prepareTodos","visiableTodos","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f04ad492.chunk.js","sourcesContent":["// import { checkPropTypes } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  onUserSelect,\n  selectedUser,\n  handleChangeTitle,\n  titleSearch,\n  setStatus,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <div className=\"TodoList__list-container\">\n      <p>Search by title name:</p>\n      <input\n        type=\"text\"\n        id=\"search=query\"\n        name=\"titleSearch\"\n        value={titleSearch}\n        onChange={({ target }) => handleChangeTitle(target)}\n      />\n      <p>Select todo status:</p>\n      <select\n        onChange={event => setStatus(event.target.value)}\n      >\n        <option value=\"All\">All</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Completed\">Completed</option>\n\n      </select>\n\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={\n              todo.completed\n                ? 'TodoList__item TodoList__item--checked'\n                : 'TodoList__item TodoList__item--unchecked'\n            }\n          >\n            <label>\n              <input type=\"checkbox\" readOnly />\n              <p>{todo.title}</p>\n            </label>\n            <button\n              className={\n                todo.userId === selectedUser\n                  ? `\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  `\n                  : 'TodoList__user-button button'\n              }\n              type=\"button\"\n              onClick={() => onUserSelect(todo.userId)}\n            >\n              User&nbsp;#\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n  })).isRequired,\n  onUserSelect: PropTypes.func.isRequired,\n  selectedUser: PropTypes.number.isRequired,\n  handleChangeTitle: PropTypes.func.isRequired,\n  titleSearch: PropTypes.string.isRequired,\n  setStatus: PropTypes.string.isRequired,\n};\n","\nconst BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status} - ${res.statusText}`);\n    }\n\n    return res.json();\n  });\n","\nimport { request } from './helper';\n\nexport const getTodos = () => request('/todos');\n\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  async componentDidMount() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user: user.data });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      const user = await getUser(this.props.userId);\n\n      // eslint-disable-next-line\n      this.setState({ user: user.data });\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return <p>loading user</p>;\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.id}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={this.props.onClearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    titleSearch: '',\n    selectStatus: 'All',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos: todos.data });\n  }\n\n  setCurrentUser = (userId) => {\n    if (this.state.selectedUserId !== userId) {\n      this.setState({ selectedUserId: userId });\n    }\n  }\n\n  handleChangeTitle = ({ value }) => {\n    this.setState({ titleSearch: value });\n  }\n\n  setTodosStatus = (status) => {\n    this.setState({ selectStatus: status });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  prepareTodos = () => {\n    const { todos, titleSearch, selectStatus } = this.state;\n\n    let visiableTodos = [...todos];\n\n    if (selectStatus === 'Active') {\n      visiableTodos = [...todos].filter(({ completed }) => !completed);\n    }\n\n    if (selectStatus === 'Completed') {\n      visiableTodos = [...todos].filter(({ completed }) => completed);\n    }\n\n    if (titleSearch) {\n      visiableTodos = todos.filter(\n        todo => `${todo.title}`.toLowerCase().includes(\n          this.state.titleSearch.toLowerCase(),\n        ),\n      );\n    }\n\n    return visiableTodos;\n  }\n\n  render() {\n    const { todos, selectedUserId, titleSearch } = this.state;\n\n    const visiableTodos = this.prepareTodos();\n\n    return (\n      <div className=\"App\">\n        {todos.length > 0\n          && (\n          <>\n            <div className=\"App__sidebar\">\n              <TodoList\n                todos={visiableTodos}\n                onUserSelect={this.setCurrentUser}\n                selectedUser={selectedUserId}\n                titleSearch={titleSearch}\n                handleChangeTitle={this.handleChangeTitle}\n                setStatus={this.setTodosStatus}\n              />\n            </div>\n\n            <div className=\"App__content\">\n              <div className=\"App__content-container\">\n                {selectedUserId ? (\n                  <CurrentUser\n                    userId={selectedUserId}\n                    onClearUser={this.clearUser}\n                  />\n                ) : 'No user selected'}\n              </div>\n            </div>\n          </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}